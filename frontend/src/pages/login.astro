---
// src/pages/login.astro
// En el futuro, aquí puedes poner lógica para verificar si el usuario ya tiene una sesión.
---
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login / Registro</title>
  <style>
    /* Estilos simples para centrar y organizar */
    body { font-family: sans-serif; display: grid; place-content: center; min-height: 100vh; gap: 2rem; }
    form { display: flex; flex-direction: column; gap: 0.5rem; border: 1px solid #ccc; padding: 1.5rem; border-radius: 8px; }
    input { padding: 0.5rem; }
    button { padding: 0.5rem; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }
    button:hover { background-color: #0056b3; }
    .forms-container { display: flex; gap: 2rem; }
  </style>
</head>
<body>
  <h1>Simulador de Crédito</h1>
  <div class="forms-container">
    
    <form id="registerForm">
      <h2>Registrarse</h2>
      <label for="reg-username">Usuario:</label>
      <input type="text" id="reg-username" name="username" required />
      <label for="reg-password">Contraseña:</label>
      <input type="password" id="reg-password" name="password" required />
      <button type="submit">Crear Cuenta</button>
    </form>

    <form id="loginForm">
      <h2>Iniciar Sesión</h2>
      <label for="login-username">Usuario:</label>
      <input type="text" id="login-username" name="usuario" required />
      <label for="login-password">Contraseña:</label>
      <input type="password" id="login-password" name="password" required />
      <button type="submit">Entrar</button>
    </form>

  </div>

  <script>
    // --- Lógica para el formulario de REGISTRO ---
    document.getElementById('registerForm')?.addEventListener('submit', async (e) => {
      e.preventDefault(); // Evita que la página se recargue

      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      const response = await fetch('http://localhost:3000/usuario/registro', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });

      const result = await response.json();
      
      if (response.ok) {
        alert(`¡Registro exitoso! ${result.message}`);
        form.reset();
      } else {
        alert(`Error en el registro: ${result.error}`);
      }
    });

    // --- Lógica para el formulario de LOGIN ---
    document.getElementById('loginForm')?.addEventListener('submit', async (e) => {
      e.preventDefault();

      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      const response = await fetch('http://localhost:3000/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (response.ok) {
        alert(`¡Login exitoso! Bienvenido.`);
        // Aquí es donde en el futuro redirigirías al usuario al dashboard
        // window.location.href = '/dashboard';
      } else {
        alert(`Error en el login: ${result.error}`);
      }
    });
  </script>
</body>
</html>